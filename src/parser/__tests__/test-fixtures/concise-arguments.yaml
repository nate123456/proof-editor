# Example demonstrating concise argument syntax: [premises]: [conclusions]
# This format makes YAML easier to write by hand compared to verbose object format

statements:
  s1: "All men are mortal"
  s2: "Socrates is a man"  
  s3: "Socrates is mortal"
  s4: "All mortals die"
  s5: "Socrates dies"
  p1: "If P then Q"
  p2: "P"
  q1: "Q"

# Concise format: array of premise-conclusion mappings
arguments:
  # Bootstrap argument (empty premises) - arg1
  - []: ["p1"]
  
  # Simple conditional reasoning - arg2
  - ["p1", "p2"]: ["q1"]
  
  # Multiple premises to single conclusion (modus ponens) - arg3
  - ["s1", "s2"]: ["s3"]
  
  # Chained reasoning - arg4  
  - ["s4", "s3"]: ["s5"]
  
  # Single premise example - arg5
  - ["s2"]: ["s3"]

# Trees using the concise arguments (auto-generated IDs: arg1, arg2, arg3, arg4, arg5)
trees:
  logical_chain:
    offset: { x: 100, y: 100 }
    nodes:
      root: { arg: arg1 }           # Bootstrap: [] → [p1]
      step1: { root: arg2, on: 0 }  # [p1, p2] → [q1]
      step2: { root: arg3, on: 0 }  # [s1, s2] → [s3] 
      step3: { step2: arg4, on: 0 } # [s4, s3] → [s5]

  simple_chain:
    offset: { x: 400, y: 200 }
    nodes:
      n1: { arg: arg5 }             # [s2] → [s3]